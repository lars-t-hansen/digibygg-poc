This program is derived from the AWS embedded C IOT SDK,
https://github.com/aws/aws-iot-device-sdk-embedded-C, version 202108.00.  It is a variant of the
demos/mqtt/mqtt_demo_mutual_auth demo program.

To build, you need to check out, configure, and build the libraries for the AWS IoT embedded C SDK
somewhere else in your directory tree.  Let $AWS be the absolute path to the AWS IoT embedded C SDK
root directory.  After configuring in $AWS per instructions, just type "make" in the build
directory.  This will build libraries (a number of which you will need) and demos (which you won't).

Generally speaking, the AWS IoT SDK only works on Linux.  It would be useful (probably) to port it
at least to Darwin.

Then, in the Makefile in this directory, change the value of AWS to reflect the location of the
directory.  Type "make" to build everything.  The final executable is called "snappysense".

To run, the libraries built by the build process must be in a suitable path, I usually do

   LD_LIBRARY_PATH=$AWS/build/lib ./snappysense

In this directory:

   mqtt-client.c is a generic mqtt client derived from the AWS SDK, adapted to our needs.

   core_mqtt_config.h is a header file for the mqtt client, this should probably be cleaned up, it's
   not obvious that it's needed.

   configfile.{c,h} is code to read the snappysense config file.

   sensors.c read the sensors and work the actuators attached to the device.

   snappysense.{c,h} has the main program and logic for driving the mqtt client, reading sensors,
   working actuators, and similar.
